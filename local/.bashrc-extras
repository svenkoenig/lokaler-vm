export PATH_SHARED_FOLDER=/mnt/hgfs/lokaler
export PATH_LOKALER_VM=$HOME/lokaler-vm/local
export PIP_DOWNLOAD_CACHE=$HOME/.pip_download_cache

. $PATH_LOKALER_VM/settings.sh

# ---------- REPOSITORIES ----------
export PATH_LOKALER_LOKALER=$PATH_REPOS_ALL/lokaler

# ---------- SHELL NICETIES ----------
# PS1="\[\e]0;\w\a\]\n\[\e[45m\]\u@\h\[\e[0m\] \[\e[33m\]\w\[\e[0m\] @$(__git_ps1 " (%s)") \n\$ "
function prompt_command {
	user_machine="\[\e[45m\]\u@\h\[\e[0m\]"
	path="\[\e[33m\]\w\[\e[0m\]"
	branch=$(__git_ps1 " @(%s)")
	export PS1="${user_machine} ${path}${branch}\n\$ "
}
export PROMPT_COMMAND=prompt_command

bind '"\e[A": history-search-backward'
bind '"\e[B": history-search-forward'

alias ll='ls -la'

export MANAGE="python $PATH_LOKALER_LOKALER/manage.py"

alias manage=$MANAGE
# wrap-alias $MANAGE

alias activate='. ~/env/bin/activate'
alias update-env='pip install -r $PATH_LOKALER_LOKALER/requirements.txt'

alias runserver='manage runserver 0.0.0.0:8000'
alias shell='manage shell'

alias shutdown='sudo shutdown -h now'

update-vm () {
	_path=`pwd`;
	cd $PATH_LOKALER_VM;
	git pull;
	cd $_path;
}

use-conf () {
	if [ -z "$1" ]
	then
		echo "missing argument."
	else
		lokaler_config_file=$PATH_LOKALER_LOKALER/instances/config/$1.conf
		if [ -e $lokaler_config_file ]
		then
			export LOKALER_CONFIG_FILE=$lokaler_config_file
		else
			echo \"$lokaler_config_file\" doesn\'t exist.
		fi
	fi
}

# ---------- GENERAL COMFORT ----------
mkdircd () { mkdir -p $1 && cd $1; }
alias cdtmp='cd ~/tmp'

# ---------- REPOSITORIES ----------
alias repos-update="$PATH_LOKALER_VM/repos/update.sh"
alias repos-pull="$PATH_LOKALER_VM/repos/git-all.sh pull"
alias repos-status="$PATH_LOKALER_VM/repos/git-all status"

# ---------- DATABASE ----------
alias db-ls='psql -l'
alias db-rm='dropdb'
alias db-cp='createdb -T'
db-mv () { echo "ALTER DATABASE \"$1\" RENAME TO \"$2\";" | psql; }

alias db-ls-dumps='ls -l ~/dumps'
alias db-get-remote-dump='bash $PATH_LOKALER_VM/database/get_remote_dump.sh'
alias db-restore-latest-dump='bash $PATH_LOKALER_VM/database/restore-latest-dump.sh'
alias db-reset='$PATH_LOKALER_VM/database/db-reset.sh'

db-use () {
	echo "DATABASE_DEFAULT_NAME = '$1'" > $PATH_LOKALER_LOKALER/lokalerde/settings/local_database.py
}

# ---------- SWITCH INSTANCES ----------
instance-set () {
	if [ -z "$1" ]
	then
		echo "missing argument instance name."
		return
	fi
	
	instance_name=$1
	
	lokaler_config_file=$PATH_LOKALER_LOKALER/instances/config/${instance_name}.conf
	if [ ! -e $lokaler_config_file ]
	then
		echo "configuration file \"${lokaler_config_file}\" doesn't exist."
		return
	fi

	media_root_dir=/home/lokaler/production/${instance_name}/media
	if [ ! -d $media_root_dir ]
	then
		echo "media root dir \"${media_root_dir}\" doesn\'t exist."
		return
	fi

	database_name=lokaler_${instance_name}
	# TODO - check if database exists
	
	export LOKALER_CONFIG_FILE=$lokaler_config_file
	export LOKALER_ACTIVE_INSTANCE=$instance_name

	settings_file="$PATH_LOKALER_LOKALER/lokalerde/settings/local_vm.py"
	echo "" > $settings_file
	echo "DATABASE_DEFAULT_NAME = '${database_name}'" >> $settings_file;
	echo "MEDIA_ROOT = '/home/lokaler/production/${instance_name}/media'" >> $settings_file
	echo "MEDIA_ROOT = '/home/lokaler/production/${instance_name}/media'" >> $settings_file
	echo $instance_name > $SETTING_LOKALER_ACTIVE_INSTANCE_FILE
	
	echo "active instance: \"$instance_name\""
}

alias media-mirror='$PATH_LOKALER_VM/media-mirror.sh'

# ---------- MEDIA ----------
alias media-mirror='$PATH_LOKALER_VM/media-mirror.sh'

# ---------- BASH COMPLETION ----------
. ~/.scripts/make-completion-wrapper.sh

# ---------- CD ----------
alias cd-tmp="cd ~/tmp"
alias cd-vm="cd $PATH_LOKALER_VM"

alias cd-repositories="cd $PATH_REPOS_ALL"
alias cd-lokaler="cd $PATH_REPOS_ALL/lokaler/lokalerde"
alias cd-lokaler-admin="cd $PATH_REPOS_ALL/lokaler/lokaler_admin"
alias cd-lokaler-analytics="cd $PATH_REPOS_ALL/lokaler-analytics/analytics"
alias cd-lokaler-api="cd $PATH_REPOS_ALL/lokaler/lokaler_api"
alias cd-lokaler-core="cd $PATH_REPOS_ALL/lokaler/localdata"
alias cd-lokaler-frontend="cd $PATH_REPOS_ALL/lokaler/lokaler_frontend"
alias cd-lokaler-places="cd $PATH_REPOS_ALL/lokaler-places/places"
alias cd-lokaler-users="cd $PATH_REPOS_ALL/lokaler-users/users"

# ---------- GIT ----------
alias gs="git status"
alias gd="git diff"
alias gc="git commit"
alias ga="git add"
alias gl="git log"
alias gp="git push"
alias gll='git log --graph --pretty=oneline --abbrev-commit'

# ---------- SSH ----------
alias ssh_lokaler='ssh sven@89.238.64.39'

if [ -e $SETTING_LOKALER_ACTIVE_INSTANCE_FILE ]
then
	instance-set `cat $SETTING_LOKALER_ACTIVE_INSTANCE_FILE`
fi;
activate

# ---------- SSH ----------
. ~/lokaler-vm/local/django_bash_completion